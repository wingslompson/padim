fun main() {
    println("Hello, world!!!")
    print("aaaaaaaa")
}
//-----------------------
fun main() {
    println("aoba")//exibir mensagem no console
    //comentario de uma linha 
    /*
     * ele
     * é
     * um
     * comentario
     * de
     * mais
     * de 
     * uma
     * linha
     */
     //Variáveis - eles armazenam valores
     //variáveis mutáveis - seu valor pode ser alterado ----------- var
     //variáveis não mutáveis - seu valor não pode ser alterado ------- val
     //
     // Tipos de Variáveis
     // Boolean - verdadeiro ou falso EX: true e false
     // String - Caracteres no geral ...entre ASPAS DUPLAS 
     // - Sem limite de caracteres EX: "João Geromel cadeira´s"
     //  
     // Char - apenas 1 digito de caractere... dentro de ASPAS SIMPLES Ex: 'J'
     // Int - Números inteiros EX: 1000
     // Double - números decimais com limite de 7 digitos após a vírgula -
     // arredonda o número EX: 22.5
     // 
     // Float - Números decimais, com um limite de até 14 digitos após a vírgula -
     // arredonda o número EX: 22.5f
     // 
     // Long - números longos com muitos dígitos, ou decimal EX: 800000000000000000000000000000
     // 
     // Estrutura de uma variável:
     // 
     // var nome = valor
     //       ou
     // var nome: tipo 
     // 
     // 
     var professoresDeGeografia = "Glória"
     var professorr: string 

}
//---------------------- 
fun main() {
  //concatenação 
  /*
  var tartaruga = "Michael Jackson"
    println("O nome da tartaruga do Mbappé é $tartaruga")
    println("O nome da tartaruga do Mbappé é " + tartaruga)
    
    var leclerc = 2
    var alonso = 1 
    
    println("A posição do Leclerc = a posição do Alonso são ${(leclerc + alonso)}")
     println("A posição do Leclerc = a posição do Alonso são " + (leclerc + alonso))
  
    
    var nome = "Pedro"
    var idade = 14 
    var cidade = "São Paulo"
    
    println("O meu nome é $nome, eu tenho $idade anos e moro em $cidade")
    */ 
    //Exercício - Faça um diálogo de no mínimo 15 linhas, nele deve conter, 
    //os nomes de forma contatenada usando variaveis 
    
    var nome1 = "Pedro"
    var nome2 = "Fagner"
    var lugar = "Itaquerão"
    var time = "Corinthians"
    var quantidade = 0
    println ("Ontem após o jogo do $time, $nome1 bravo com a derrota de seu time foi tirar satisfação com o lateral de seu time:")
    println ("Qual é $nome2 sacanagem já, 5 pênaltis perdidos de forma seguida, tu ganha 300 mil, aprende a bater pênalti ")
    println ("$nome2 retrucou dizendo:")
    println ("Po $nome1 você nunca vai saber qual é a pressão de bater um pênalti no $lugar lotado")
    println ("$nome1 revoltado respondeu:")
    println ("PRESSÃO? o jogo é contra o todo poderoso ituano $nome2")
    println ("$nome2 respondeu:")
    println ("Quantos paulistas vc tem?")
    println ("$quantidade") 
    println ("E brasileiros?")
    println ("$quantidade")
    println ("libertadores?") 
    println ("Po $nome2 esse eu tenho $quantidade mas você tbm")
    println ("$nome2 disse triste:")
    println ("i vdd mané")
    println ("Os dois foram emboram do $lugar e foram para suas casas.")    
} 
//------------------------------------------
fun main() {
  
     //Operadores Matemáticos 
     // + -> adição
     // - -> subtração
     // / -> divisão
     // * -> multiplicação
     // % -> módulo - resto da divisão
     // 
    /* var halls = 7 
     var freegells = 6
    
    println (halls + freegells)
    println (halls - freegells)
    println (halls % freegells)
    println (halls * freegells)*/
    // EXERCÍCIO - Faça uma calculadora que contenha cada um dos operadores matématicos 
    var halls = 100
     var freegells = 15
 

  println("******************finje que tem uma coisa bonita aq************************")
    println ("$halls + $freegells é: ${(freegells + halls )}")
    println ("$halls - $freegells é: ${(freegells - halls )}" )
    println ("$halls / $freegells é: ${(freegells / halls )}")
    println ("$halls x $freegells é: ${(freegells * halls )}" )
    println ("A sobra da divisão entre  $halls e $freegells é: ${(freegells % halls )}" )
    println ("********************Fim :)***************************")
    
    
    
    
}--------------------------------------------- 
fun main() {
  //Operadores relacionais
  //
  // == -> igual a... 
  // != -> diferente de...
  // !  -> negando valor 
  // >  -> maior que...
  // <  -> menor que... 
  // >= -> maior ou igual a...
  // <= ->menor ou igual a...
  // 
  //  
  // ++ -> adiciona 1 ao valor
  // -- -> subtrai 1 de um valor
  // += -> adiciona um determinado valor a um valor
  // -= -> subtrai um determinado valor de um valor
  
   /* var clauldetty = 50 
    var josias = 30
    var berennice = 90
    var bernnadetthy = 80
    
    println(clauldetty)
    clauldetty++
    println(clauldetty)
    println("")
    
    println(josias)
    josias--
    println(josias)
    println("")
    
    println(berennice)
    berennice += clauldetty
    println(berennice)
    println("")
    
    println(bernnadetthy)
    bernnadetthy -= josias
    println(bernnadetthy) */ 
    
    // Condições if..else simples
    
    
    // se... senão
     
    // estrutura: 
    // if (condição){
    // ação
    // }else{
    // ação
    // }
    /*
    var interruptor = true
    
    if(interruptor != true){ 
    println("Luz acesa :)")
    }else{
        println("Luz apagada")
    }
    */
    var fome = true 
        
    if(fome){
        println("Alimente-se!")
    }else{
        println("Alimentou-se")
        
    }    
    
    
    
    
 
    
}
//--------------------------------------------------------------
fun main() {
    /*var v1 = 20
    var v2 = 10
    
     if (v1>v2){
     println("O numero maior é $v1")
    }else if (v1<v2){
         println("O numero maior é $v2")
     }else{ 
         println("os numeros sao iguais")}

     
    
    var tpa =  10
    
    if (tpa>0){
    println("$tpa é maior que 0")
    }else if (tpa<0){
        println("$tpa é menor que 0")
    }else{
        println("Os numeros sao iguais")
    }*/ 
   
  // Operadores lógico
  // && -> e ou and -> se todas as condições forem verdadeiras, o resultado será verdadeiro
  // || -> ou or -> se pelo menos uma condição for verdadeira, o resultado será verdadeiro
  // 
  // Tabela verde
  // 
  // &&
  // VV -> V
  // VF -> F
  // FV -> F
  // FF -> F
  // 
  // ||
  // VV -> 
  // VE ->
 
    
  }

    
   //--------------------------------------------------------------------
   
   fun main() {
  /* //show so Picles
   //pro cidadão menor de 18 anos entrar, ele precisa ter pelo menos 12 anos e acompamhado de um responsavel maior
    
   var idade = 18
    var comResp = false
    var comI = false
     if(idade <=18){
         if((idade >= 12 && comI == true) || comResp == true){
             println("Aproveite o show")
     }else{
             println("tu nao pode entrar")
         }
       }else{ 
             
         println("bom show")
     }*/
    var coracao = 0

     if(coracao <= 0){
         if(coracao >= 0){
             println("vc foi de base")
         }
       }else{ 
             
         println("tu ta vivasso")
         }
     
    
     } 
//--------------------------------------------------------------------     
    fun main() {
  /* //show so Picles
   //pro cidadão menor de 18 anos entrar, ele precisa ter pelo menos 12 anos e acompamhado de um responsavel maior
    
   var idade = 18
    var comResp = false
    var comI = false
     if(idade <=18){
         if((idade >= 12 && comI == true) || comResp == true){
             println("Aproveite o show")
     }else{
             println("tu nao pode entrar")
         }
       }else{ 
             
         println("bom show")
     }
    var coracao = 0
    var vidas = 0
    
    if (coracao == 0)
    {
        println("Foi de vasco!")
        vidas--
    } else {
        println("Continue...")
    }
    if (vidas <= 0)
    {
        println("Acabaram suas vidas!")
    } else {
        println("Continue...")
    }*/
    
    //when - quando 
    //
    //comparação de quando um valor for igual a um determindado valor,
    // uma determinada ação será executado
    // 
    // estrutra do when
    // 
    // when(auxiliar)
    // valor -> {ação}
    // valor -> {ação}
    // valor -> {ação}
    // valor -> {ação}
    // valor -> {ação}
    // else -> {ação}
    // }
    // será usado geralmente quando durante o programa o valor da variavel
    // não for estatico, ou seja, ele estiver mudando 
    
    var mes = 5 
    
    when (mes){
        1 -> {println("Lisboa")} 
        2 -> {println("New york")}
        3 -> {println("Rio Janeiro")}    
        4 -> {println("São Paulo")}
        5 -> {println("Keylandia")}
        6 -> {println("Milwaukee")}
        7 -> {println("Barcelona")} 
        8 -> {println("Springfield")}
        9 -> {println("Los Pollos Hermanos")}
        10 -> {println("Elmore")}
        11 -> {println("Toronto")}
        12 -> {println("Seoul")}
        else ->{println("Acordou")}
    
    
    
    }
}


//------------------------------------------------------------------------------
    
    fun main() {
    //Exercício -> Escreva um programa em kotlin que declare uma váriavel chamada 
    //"diaSemana" do tipo String, que represente um dia da semana. Em seguida, ultilize a 
    //declaração "when" para exibir uma mensagem na tela informando se o dia da semana é 
    //um dia útil ou final de semana. 
    
    var diasemana = ""
    when (diasemana){
    "domingo"-> {println("Final de semana")} 
    "segunda" -> {println("Dia útil")}
    "terca" -> {println("Dia útil")}    
    "quarta" -> {println("Dia útil")}
    "quinta" -> {println("Dia útil")}
    "sexta" -> {println("Dia útil")}
    "sabado" -> {println("Final de semana")}
    else -> {println("deixa de ser burrokkk")}
    }
}
//------------------------------------------------------------
    
 fun main() {
// Laços de repetição 
// 
// repeat - repita
// vai repetir uma determinada ação uma determinada quantidade de vezes
// ESTRUTURA DO REPEAT
// 
// repeat(númerosVezes){
// ação
// }
// 
// while - enquanto
// ENQUANTO uma condição for verdadeira, uma determinada ação será executada
// ESTUTURA DO WHILE
// 
// while(condição){
// ação
// } 
// 
// do..while - faça..enquanto 
// 
// Uma determinada ação será executada, ENQUANTO uma determinada condição fr verdadeira
//   
// ESTRUTURA DO DO..WHILE    
// 
// do{
// ação        
// }while(condição)            
/*var contador = 0
    do{
        println(contador++)
    }while(contador > 10)    
    
    
    
    */
    
// for - para...
//  
// PARA cada item em um intervalo oi colection, uma determinada ação será executada
// ESTRUTURA DO FOR:
// 
//  for(vAuxiliar in interválo ou celection) 
//  ação 
//  }
/* 
for(pneu in 1..4){
    println("1 pneu")
}
*/
    /* repeat(8){
     println("Isso é um teste")
 }*/ 
    
  //Exercício -> faça um progama com auxilio de uma variavel contador,
  //no qual nela será acresentado 1 a cada repetição,
  //até que dê a quantidade de vezes decidida
/*  
var cont = 10 
var resultado = 0
    repeat(cont){
  resultado++
         println("Isso é um teste $resultado")
         }
    
  */
    /*
    var cont = 10
    var cond = 0 
    
    while (cont > cond){
       println( cond++)
    } 
    
    //Exercício -> Simulador de bateria de celular
    //faça um while que mostre a bateria 100% diminuindo 
    //quando ela chegar a 15, deve mostrar a mensagem pedindo para
    //conectar o carregador, e quando ela chegar a 0, deve mostrar a mensagem 
    //aparelho desligando 
     
    var bateria = 100 
    
    while (bateria >= 0){
      println("$bateria%")
      when(bateria){
     15 -> println("coloque para carregar")
      

     0 ->  println("Acabou a bateria :(")
        
    }
      bateria--
    }*/
    
    //Exercício -> Faça uma tabuada até o décimo multiplo de um número escolhido, 
    //ultilizando o laço for
    //em excessão as tabuadas do 0, 1, 2
    
     /**   println("Hello, world!!!")
}
        var contador = 0

do{
        println(contador++)
    }while(contador >10 )


for(pneu in 1..4){
  println("1 Pneu")
}
  for(pneu in 0..3){
   println(pneu + 1)
  }
*/
var tabuada = 0

 for(tabuada in 1..10){
      println(tabuada * 9)
 }	
 
 
}
//Collections
//
// intervalos, listas, arrays, vetores etc
//
// tipos de listas
// 

var list1 = listOf("tartaruga", 0, 0.1,true)
println(list1) //exibir a lista
println(list1.size) //retorna o tamanho da lista
println(list1.lastIndex)//retornar o ultimo index
println(list1[2]) //exibir o valor de um determinado index
println(list1.contains("tartaruga"))//compara se existe um determinado valor dentro da lista
println(list1.indexOf(0))//indica o index de um determinado valor
println(list1.lastIndexOf(0.1))//indica o ultimo de um determinado valor
println(list1.first())//o valor do  primeiro index
println(list1.last())//o valor do ultimo index
println(list1.isEmpty())//campara se a lista esta vazia

// <tags>
var list2 = listOf<String>("Lebron James", "Stephen Curry", "Michael Jordan", "Pernalonga", "Klay Thompson")
//lista acima especifica o tipo de dados que vai ser guardado
//
//obs: ListOf() -> imutavel
//proxima aula ... mutableListOf()

fun main() {
// Obs. listOf -> imutável
// Próxima aula... mutablelistOf()
// mutableListOf() --> armazena qualquer tipo de valores conjuntos 
// mutableListOf<Tipo de valor> -> armazena valores especificas de seu tipo 
/* 
var comida = mutableListOf<String>("Strogonoff", "Patê de frango", "Lasanha", "Feijoada") 


println(comida)

//Propriedades 
 
comida.add("Macarrão") //Adiciona um valor a lista 
println(comida)

comida.add(3, "Cuscuz")//Adiciona um valor a um index especifico na lista
println(comida)

comida.remove("Patê de frango")//Remove um valor especifico na lista
println(comida)

comida.removeAt(0)//Remove um valor de um index especifico
println(comida)

comida.set(2, "Pastel de carne seca") //Substitou um valor pelo index
println(comida)

comida.clear()
println(comida)
*/

//Exercício -> A cada mês do ano, em uma turma de 5 alunos, entra um aluno novo 
//Crie uma lista inicial de alunos da turma 
//A cada mês adicione um novo aluno (em linhas diferentes)
//Em 2 meses do ano, 2 alunos foram substítuidos por outros dois package
//
//Exiba a lista a lista de alunos respectivas de cada mes do ano

var alunos = mutableListOf<String>("Pedro", "Ireno", "Gabriel", "Pelé", "Raj")

println("Janeiro")
alunos.add("Duda")
println(alunos)

println("Fevereiro")
alunos.add("Rony")
println(alunos)

println("Março")
alunos.add("Hebert")
println(alunos)

println("Abril")
alunos.add("Pablo")
alunos.set(1, "Helena")
println(alunos)

println("Maio")
alunos.add("Luisa")
alunos.removeAt(4)
println(alunos)

println("Junho")
alunos.add("Ana")
println(alunos)

println("Julho")
alunos.add("Miguel")
println(alunos)

println("Agosto")
alunos.add("Guilherme")
alunos.set(5, "Felipe")
println(alunos) 

println("Setembro")
alunos.add("Diego")
alunos.removeAt(7)
println(alunos)

println("Outubro")
alunos.add("Willian")
println(alunos)

println("Novembro")
alunos.add("Nicolas")
println(alunos)

println("Dezembro")
alunos.add("Camila")
println(alunos)









}
















//----------------------------------------------------------------------------------------------
    
    fun main() {
    
    //POO
    //
    // Programação orientada à objetos
    // 
    // Objetivo: Simular atividades e situações do mundo real
    // 
    // Objeto - Elementos que podem interagir com um sistema Ex : Pé
    // 
    // Classe - Denominação de um determinado objeto Ex : Membro do corpo
    // 
    // Atributos - Características, propriedades, parâmetros Ex : Tamanho 
    // 
    // Métodos - Atividades e ações que o objeto pode realizar Ex : Chutar
    //  
    // Herança - Atributos de um objeto que são HERDADOS de uma classe 
    
  
    
    }
    
    //-------------------------------------------------------------------
    
    
    
    fun main() {
  var pessoa1 = Pessoa() //Instanciamos um obj 
  
  
  pessoa1.nome = "Pedro Henrique" // Alterar um valor de um atributo de um obj
    pessoa1.idade = 15
    pessoa1.altura = 1.76 
    pessoa1.peso = 63.50 
    pessoa1.profissao = "Dev"
    pessoa1.nacionalidade = "Brasileiro"
    
    println(pessoa1.nome)
    println(pessoa1.idade)
    println(pessoa1.altura)
    println(pessoa1.peso)
    println(pessoa1.profissao)
    println(pessoa1.nacionalidade)
        
    }

class Pessoa {
    //Atributos que todas as pessoas podem ter
    var nome = ""
    var idade = 0
    var altura = 0.0
    var peso = 0.0 
    var profissao = ""
    var nacionalidade = "" 
    
}

//EXERCÍCIO -> faça uma apresentação sua utilizando a classe Pessoa() já criada e utilizando 






//------------------------------------------------------------------------------------------------------------------------------
    fun main() {
 

    
  

     var animal1 = Animal("Cachorro", "Pinscher", 7, "Chinelo", "Grande")
     // Ecerxicios --> 
     // Faça o cátalogo de animais que estão morando no zoologicos de SP 
     // com no minímo 20 animais, sem repetição de raça
     
     
    }


    
}
class Animal (var especies: String,
              var raca: String,
              var idade: Int,
              var dieta: String,
              var habitat: String)
    //------------------------------------------------------------------------------------------------------------------------------
    fun main() {
 

    
  // Ecerxicios --> 
     // Faça o cátalogo de animais que estão morando no zoologicos de SP 
     // com no minímo 20 animais, sem repetição de raça
     

     var animal1 = Animal("Cachorro", "Pinscher", 7, "Chinelo", "Pequeno")
     var animal2 = Animal("Gato", "Munchkin", 1, "Ração", "Pequeno")
     var animal3 = Animal("Tatu", "Pichiciego-maior", 4, "Vegetais", "Médio")
     var animal4 = Animal("Macaco", "Babuino", 5, "Banana", "Médio")
     var animal5 = Animal("Cavalo", "Puro-sangue inglês", 1, "Verduras", "Médio")
     var animal6 = Animal("Porco", "Yorkishire", 7, "Verduras", "Médio")
     var animal7 = Animal("Vaca", "Holandesa", 5, "Verduras", "Grande")
     var animal8 = Animal("Ovelha", "Merino", 1, "Verduras", "Pequeno")
     var animal9 = Animal("Coelho", "Rex", 6, "Verduras", "Pequeno")
     var animal10 = Animal("Hamster", "Sírio", 9, "Ração", "Pequeno")
     var animal11 = Animal("Furão", "Marshall", 3, "Verduras", "Pequeno")
     var animal12 = Animal("Papagaio", "Arara", 80, "Ração", "Pequeno")
     var animal13 = Animal("Pato", "Pequim", 4, "Verduras, peixes e insetos", "Médio")
     var animal14 = Animal("Peru", "Bronze", 2, "Milho e minhocas", "Médio")
     var animal15 = Animal("Largato", "Dragão barbudo", 11, "Insetos", "Médio")
     var animal16 = Animal("Aranha", "Tarântula", 1, "Insetos", "Pequeno")
     var animal17 = Animal("Cobra", "Jiboia", 3, "Verduras", "Médio")
     var animal18 = Animal("Tartaruga", "Jabuti", 220, "Verduras", "Médio")
     var animal19 = Animal("Rato", "Braco de laboratório ", 1, "Insetos e ração", "Pequeno") 
    /*                     45 */
println("Espécie: "+animal1.especie +"| Raça: "+ animal1.raca +"| idade: "+ animal1.idade+"| Dieta "+ animal1.dieta + "| Porte: "+ animal1.porte)
println("Espécie: "+animal2.especie +"| Raça: "+ animal2.raca +"| idade: "+ animal2.idade+"| Dieta "+ animal2.dieta +"| Porte: "+ animal2.porte)
println("Espécie: "+animal3.especie +"| Raça: "+ animal3.raca +"| idade: "+ animal3.idade+"| Dieta "+ animal3.dieta +"| Porte: "+ animal3.porte)
println("Espécie: "+animal4.especie +"| Raça: "+ animal4.raca +"| idade: "+ animal4.idade+"| Dieta "+ animal4.dieta +"| Porte: "+ animal4.porte)
println("Espécie: "+animal5.especie +"| Raça: "+ animal5.raca +"| idade: "+ animal5.idade+"| Dieta "+ animal5.dieta +"| Porte: "+ animal5.porte)
println("Espécie: "+animal6.especie +"| Raça: "+ animal6.raca +"| idade: "+ animal6.idade+"| Dieta "+ animal6.dieta +"| Porte: "+ animal6.porte)
println("Espécie: "+animal7.especie +"| Raça: "+ animal7.raca +"| idade: "+ animal7.idade+"| Dieta "+ animal7.dieta +"| Porte: "+ animal7.porte)
println("Espécie: "+animal8.especie +"| Raça: "+ animal8.raca +"| idade: "+ animal8.idade+"| Dieta "+ animal8.dieta +"| Porte: "+ animal8.porte)
println("Espécie: "+animal9.especie +"| Raça: "+ animal9.raca +"| idade: "+ animal9.idade+"| Dieta "+ animal9.dieta +"| Porte: "+ animal9.porte)
println("Espécie: "+animal10.especie +"| Raça: "+ animal10.raca +"| idade: "+ animal10.idade+"| Dieta "+ animal10.dieta +"| Porte: "+ animal10.porte)
println("Espécie: "+animal11.especie +"| Raça: "+ animal11.raca +"| idade: "+ animal11.idade+"| Dieta "+ animal11.dieta +"| Porte: "+ animal11.porte)
println("Espécie: "+animal12.especie +"| Raça: "+ animal12.raca +"| idade: "+ animal12.idade+"| Dieta "+ animal12.dieta +"| Porte: "+ animal12.porte)
println("Espécie: "+animal13.especie +"| Raça: "+ animal13.raca +"| idade: "+ animal13.idade+"| Dieta "+ animal13.dieta +"| Porte: "+ animal13.porte)
println("Espécie: "+animal14.especie +"| Raça: "+ animal14.raca +"| idade: "+ animal14.idade+"| Dieta "+ animal14.dieta +"| Porte: "+ animal14.porte)
println("Espécie: "+animal15.especie +"| Raça: "+ animal15.raca +"| idade: "+ animal15.idade+"| Dieta "+ animal15.dieta +"| Porte: "+ animal15.porte)
println("Espécie: "+animal16.especie +"| Raça: "+ animal16.raca +"| idade: "+ animal16.idade+"| Dieta "+ animal16.dieta +"| Porte: "+ animal16.porte)
println("Espécie: "+animal17.especie +"| Raça: "+ animal17.raca +"| idade: "+ animal17.idade+"| Dieta "+ animal17.dieta +"| Porte: "+ animal17.porte)
println("Espécie: "+animal18.especie +"| Raça: "+ animal18.raca +"| idade: "+ animal18.idade+"| Dieta "+ animal18.dieta +"| Porte: "+ animal18.porte)
println("Espécie: "+animal19.especie +"| Raça: "+ animal19.raca +"| idade: "+ animal19.idade+"| Dieta "+ animal19.dieta +"| Porte: "+ animal19.porte)

    
     
     
    }


    

class Animal (var especie: String,
              var raca: String,
              var idade: Int,
              var dieta: String,
              var porte: String)
//----------------------------------------------------------------------------------------------------------------------------------------------


    
    
    
    
